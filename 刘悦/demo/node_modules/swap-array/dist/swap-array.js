'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.default = function (Arr, Caller, Target) {
  var Instance = Arr.constructor();
  var Stash = Arr;

  var InstanceType = Array.isArray(Instance) ? 'array' : typeof Instance === 'undefined' ? 'undefined' : _typeof(Instance);

  // Check types and throw err if no arr is passed
  if (InstanceType !== 'array') throw '[ERR] SwapArray expects a array as first param';

  // Copy the Arr-Content into new Instance - so we don't overwrite the passed array
  Stash.map(function (s, i) {
    return Instance[i] = s;
  });

  // Update indexes
  Instance[Caller] = Instance.splice(Target, 1, Instance[Caller])[0];

  return Instance;
};
